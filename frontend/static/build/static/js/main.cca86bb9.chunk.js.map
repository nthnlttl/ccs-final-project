{"version":3,"sources":["components/Button.js","components/Header/Header.js","components/Registration/RegistrationForm.js","components/Login/LoginForm.js","components/Landing/LandingPage.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","Header","props","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerwidth","useEffect","addEventListener","class","withRouter","username","email","password1","password2","user","setUser","setError","handleInput","event","target","name","value","prevState","handleError","error","console","warn","a","preventDefault","options","method","headers","Cookies","get","body","JSON","stringify","fetch","catch","response","log","json","data","set","key","isAuth","history","push","onSubmit","htmlFor","id","placeholder","onChange","required","password","LandingPage","App","useHistory","checkAuth","ok","isAdmin","is_staff","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca86bb9.chunk.js","sourcesContent":["import React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n    children,\n    type, \n    onClick, \n    buttonStyle,\n    buttonSize,\n}) => {\n    const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n    return (\n        <Link to='/registration' className='btn-mobile'>\n            <button\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n            onClick={onClick}\n            type={type}\n            >\n                {children}    \n            </button>\n        </Link>\n    )\n};    ","import React, {useState, useEffect } from 'react';\nimport { Link, NavLink, withRouter } from 'react-router-dom';\nimport './Header.css';\nimport { Button } from './../Button';\n\n\n\nfunction Header(props) {\n    const [click, setClick] = useState(false);\n    const [button, setButton] = useState(true);\n\n    const handleClick = () => setClick(!click);\n    const closeMobileMenu = () => setClick(false);\n\n    const showButton = () => {\n        if(window.innerwidth <= 960) {\n            setButton(false)\n        } else {\n            setButton(true);\n        }\n    };\n\n    useEffect(() => {\n        showButton();\n    }, []);\n\n    window.addEventListener('resize', showButton);\n\n    return (\n        <>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                        S.N.P.A  <i class=\"fas fa-dragon\"/>\n                    </Link>\n                    <div className='menu-icon' onClick={handleClick}>\n                        <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n                    </div>\n                    <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                                Home\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/Profile' className='nav-links' onClick={closeMobileMenu}>\n                                Profile\n                            </Link>\n                        </li>\n                        <li className='nav-item'>\n                            <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                                Adoption Services\n                            </Link>\n                        </li>\n                        <li>\n                            <NavLink to='/Login' className='nav-links' onClick={closeMobileMenu}>\n                                Login\n                            </NavLink>\n                        </li>\n                    </ul>\n                    {button && <Button buttonStyle='btn--outline'>Register</Button>}\n                </div>\n            </nav>\n        </>\n    )\n}\n\nexport default Header\n","import {useState} from 'react';\nimport {withRouter, Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nfunction RegistrationForm(props) {\n\n    const [user,setUser] = useState({\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n    });\n\n    const [error, setError] = useState(null)\n\n    function handleInput(event) {\n        const {name, value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error)\n    };\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        if(user.password1 !== user.password2) {\n            setError('Passwords do not match!')\n        } else {\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type':'application/json',\n                    'X-CSRFToken':Cookies.get('csrftoken'),\n                },\n                body: JSON.stringify(user)\n            };\n\n            const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n            if(!response) {\n                console.log(response);\n            } else {\n                const data = await response.json();\n                Cookies.set('Authorization', `Token ${data.key}`);\n                props.setUser((prevState) => ({\n                    ...prevState, isAuth: true,\n                }));\n                props.history.push('/');\n            }\n        }\n    }\n\n//    if(props.isAuth) {\n//        return <Redirect to='/home' />\n//    }\n\n    return (\n        <form className='mt-3 col-6' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input \n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={user.username}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='email'>Email</label>\n                <input\n                    type='email'\n                    className='form-control'\n                    id='email'\n                    placeholder='Enter Email'\n                    onChange={handleInput}\n                    required\n                    name='email'\n                    value={user.email}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password1'>Password</label>\n                <input \n                    type='password'\n                    className='form-control'\n                    id='password1'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password1'\n                    value={user.password1}\n                    />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password2'>Confirm Password</label>\n                <input \n                    type='password'\n                    className='form-control'\n                    id='password2'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password2'\n                    value={user.password2}\n                    />\n            </div>\n            <button type='submit' className='btn btn-primary mt-3'>Register</button>\n        </form>\n    )\n}\n\nexport default withRouter(RegistrationForm)","import {useState} from 'react'\nimport {withRouter, Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nfunction LoginForm(props) {\n    const [user, setUser] = useState({\n        username:'',\n        password:'',\n    });\n\n    function handleInput(event) {\n        const {name,value} = event.target;\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n\n    function handleError(error) {\n        console.warn(error);\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'X-CSRFToken':Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(user)\n        };\n\n        const response = await fetch('/rest-auth/login/', options).catch(handleError);\n        if(!response) {\n            console.log(response);\n        } else {\n            const data = await response.json();\n            Cookies.set('Authorization', `Token${data.key}`);\n            setUser((prevState) => ({\n                ...prevState,\n                isAuth: true,\n            }))\n            props.history.push('/');\n        }\n    }\n\n    if(props.isAuth) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <form className='mt-3 col-6' onSubmit={handleSubmit}>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='username'>Username</label>\n                <input\n                    type='text'\n                    className='form-control'\n                    id='username'\n                    placeholder='Enter Username'\n                    onChange={handleInput}\n                    required\n                    name='username'\n                    value={user.username}\n                />\n            </div>\n            <div className='form-group text-left mb-3'>\n                <label htmlFor='password'>Password</label>\n                <input\n                    type='password'\n                    className='form-control'\n                    placeholder='Enter Password'\n                    onChange={handleInput}\n                    required\n                    name='password'\n                    value={user.password}\n                />\n            </div>\n            <button type='submit' className='btn btn-success'>Login</button>\n        </form>\n    )\n}\n\nexport default withRouter(LoginForm)","import { useState } from 'react';\nimport LoginForm from './../Login/LoginForm';\n\nfunction LandingPage(props) {\n\n    \n    \n    return (\n        <>\n        <div className=\"container\">\n            <h1>Landing Page</h1>\n        </div>\n        <div className='header-login-form'>\n            <LoginForm />\n        </div>\n        </>\n    )\n}\n\nexport default LandingPage;","import {useState, useEffect} from 'react';\nimport {  Route, Switch, withRouter, useHistory} from 'react-router-dom';\nimport './App.css';\nimport Header from './../Header/Header'\nimport RegistrationForm from './../Registration/RegistrationForm';\nimport LoginForm from './../Login/LoginForm';\nimport Cookies from 'js-cookie';\nimport LandingPage from './../Landing/LandingPage';\n\n\nfunction App(props) {\n  const [user, setUser] = useState(null);\n\n  const history = useHistory();\n\nuseEffect(() =>  {\n  const checkAuth = async () => {\n    const response = await fetch('/rest-auth/user/');\n    if(!response.ok) {\n      setUser({isAuth: false});\n    } else {\n      const data = await response.json();\n      setUser({isAuth: true, isAdmin: data.is_staff})\n    }\n  }\n  checkAuth();\n}, [history]);\n\nasync function handleLogout(event, props) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json',\n      'X-CSRFToken':Cookies.get('csrftoken'),\n    },\n    body: JSON.stringify(props.user),\n  };\n  const response = await fetch('/rest-auth/logout/', options);\n  if (!response) {\n    console.log(response);\n  } else {\n    console.log(response);\n    const data = await response.json();\n    Cookies.remove('Authorization');\n    setUser({isAuth: false});\n    history.push('/login');\n  }\n}\n\nconst isAuth = user?.isAuth;\n// const isAdmin = user?.isAdmin;\n\n  return (\n    <>\n    <Header />\n    <Switch>\n      <Route path='/registration'>\n        <RegistrationForm />\n      </Route>\n      <Route path='/login'>\n        <LoginForm isAuth={isAuth} user={user} setUser={setUser} />\n      </Route>\n      <Route path='/'>\n        <LandingPage />\n      </Route>\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}